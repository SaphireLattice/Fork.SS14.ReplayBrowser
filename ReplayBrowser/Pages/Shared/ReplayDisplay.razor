@using Microsoft.AspNetCore.Components.Authorization
@using ReplayBrowser.Data
@using ReplayBrowser.Data.Models
@using ReplayBrowser.Helpers
@using ReplayBrowser.Models
@using ReplayBrowser.Services
@using ReplayBrowser.Services.ReplayParser
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ReplayHelper ReplayHelper
@inject AccountService AccountService
@inject ReplayParserService ReplayParserService

<div class="card" style="width: 18rem; margin-top: 1rem">
    <div class="card-header">
        <h5 class="card-title m-0 d-flex"><span class="flex-fill text-truncate me-2">@(ReplayData.ServerName ?? ReplayData.ServerId ?? "Unknown!")</span><span>#@ReplayData.RoundId</span></h5>
    </div>
    <div class="card-body">
        <dl class="replay-description">
            <dt>Date</dt><dd>@ReplayData.Date</dd>
            <dt>Gamemode</dt><dd>@ReplayData.Gamemode</dd>
            @if (ReplayData.Map == null)
            {
            <dt>Maps</dt>
                @foreach (var map in ReplayData.Maps!) {
                    <dd>@map</dd>
                }
            }
            else
            {
            <dt>Map</dt><dd>@ReplayData.Map</dd>
            }
        </dl>
    </div>
    <div class="card-footer d-flex">
        <div class="btn-group flex-fill" role="group" aria-label="Basic example">
            <a class="btn btn-primary flex-fill" type="button" href="/replay/@ReplayData.ServerId/@ReplayData.ServerName/@ReplayData.RoundId" data-bs-toggle="modal" data-bs-target="#r-@ReplayData.Id">
                View replay
            </a>
            <a class="btn btn-secondary flex-grow-0" href="/replay/@ReplayData.ServerId/@ReplayData.ServerName/@ReplayData.RoundId" target="_blank">
                <i class="fas fa-external-link-alt" title="Open in new tab"></i>
            </a>
            <button class="btn m-0 px-2 btn-outline-secondary text-warning flex-grow-0" id="favorite-button-@ReplayData.Id" onclick="FavouriteReplay(@ReplayData.Id, @ReloadOnFavourite.ToString().ToLower())">
                @if (ReplayData.IsFavorite)
                {
                    <i class="fas fa-star" title="Remove from favorites"></i>
                }
                else
                {
                    <i class="far fa-star" title="Add to favorites"></i>
                }
            </button>
        </div>
    </div>
</div>
<div class="modal fade modal-lg" id="@ModalId" tabindex="-1" aria-labelledby="@ModalId" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <ReplayDetails Replay="ReplayData" RequestModal="@ModalId"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a class="btn btn-primary" href="/replay/@ReplayData.ServerId/@ReplayData.ServerName/@ReplayData.RoundId" target="_blank">View in new tab</a>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public required ReplayResult ReplayData { get; set; }

    [Parameter]
    public bool ReloadOnFavourite { get; set; } = false;

    private string? _nameFormatted;
    private string ModalId => $"r-{ReplayData.Id}";

    protected override async void OnInitialized()
    {
        await base.OnInitializedAsync();

        _nameFormatted =  $"{ReplayData.ServerName ?? ReplayData.ServerId} #{ReplayData!.RoundId}";

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var account = await AccountService.GetAccount(authState);
        if (account == null)
        {
            return;
        }

        ReplayData.IsFavorite = account.FavoriteReplays.Contains(ReplayData.Id);
    }
}